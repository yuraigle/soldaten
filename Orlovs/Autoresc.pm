package Autoresc;

use List::MoreUtils qw/any first_index/;

my $auto_resc = 0;
my @f2resc = ();
foreach my $f (@App::FRIENDS) {
  if ($f->{PROF} =~ m/колд|чернок|лекар|волш|кудес|волх|тать|наем|кузнец|купец/) {
    push @f2resc, $f;
  }
}

my @rx_ime = (
  '^(.+) уклонил.?с. от атаки ',
  '^(.+) сумел.? избежать удара .+\.$',
  '^(.+) полностью отклонил атаку .+',
  '^(.+) содрогнулс€ от богатырского удара ',
  '^(.+) пошатнулс€ от богатырского удара ',
  # '^(.+) подгорел.? в нескольких местах, когда (.+) дыхнул.? на не..? огнем\.',
  # '^(.+) медленно покрываетс€ льдом, после морозного дыхани€ (.+)\.( \(\*+\))?$',
  # '^(.+) бьетс€ в судорогах от кислотного дыхани€ (.+)\.( \(\*+\))?$',
  # '^(.+) ослеплен.? дыханием (.+)\.( \(\*+\))?$',
);

my @rx_rod = (
  '^.+ не попал.? своим оружием в спину (.+)\.$',
  '^.+ нанес.?.? удар своим оружием в спину (.+)\.( \(\*+\))?$',
  '^.+ воткнул.? свое оружие в спину (.+)\. ўа начнетс€ убивство\.( \(\*+\))?$',
  '^”дар .+ прошел мимо (.+)\.$',
  '^ƒоспехи (.+) полностью поглотили удар .+\.$',
  '^ћощный пинок .+ не достиг (.+)$',
  '^ћагический кокон вокруг (.+) полностью поглотил удар .+\.$',
);

my @rx_vin = (
  '^.+ промазал.?, когда хотел.? ударить (.*)\.$',
  '^.+ попытал.?с. [а-€]+ (.*), но .*\.$',
  '^.+ попытал.?с. ободрать (.*) \- неудачно\.$',
  '^.+ не смог.?.? ободрать (.*) \- он.? просто промазал.?\.$',
  '^ќдним ударом .+ повалил.? (.*) на землю\.( \(\*+\))?$',
  '^.+ завалил.? (.+) на землю мощным ударом\.( \(\*+\))?$',
  '^.+ попытал.?с. пнуть (.+)\. «аймите же ...? ловкости\.$',
  '^.+ пнул.? (.+)\. ћорда .+ искривилась в гримасе боли\.( \(\*+\))?$',
  '^.+ пнул.? (.+)\. “еперь .+ дико враща.т глазами от боли\.( \(\*+\))?$',
);

P::trig {
  my ($t1, $t2) = ($1, $4);
  return unless $auto_resc;
  my $i = first_index {$_->{VIN} eq $t2} @f2resc;
  U::sendline('спасти .' . $f2resc[$i]->{IME}) if $i >= 0;
} $Autopom::RX_BATTLE1, 'nf1000:AUTORESC';

foreach (@rx_ime) {
  P::trig {
    my ($t1) = ($1);
    return unless $auto_resc;
    my $i = first_index {$_->{IME} eq $t1} @f2resc;
    U::sendline('спасти .' . $f2resc[$i]->{IME}) if $i >= 0;
  } $_, 'nf100:AUTORESC';
}

foreach (@rx_rod) {
  P::trig {
    my ($t1) = ($1);
    return unless $auto_resc;
    my $i = first_index {$_->{ROD} eq $t1} @f2resc;
    U::sendline('спасти .' . $f2resc[$i]->{IME}) if $i >= 0;
  } $_, 'nf100:AUTORESC';
}

foreach (@rx_vin) {
  P::trig {
    my ($t1) = ($1);
    return unless $auto_resc;
    my $i = first_index {$_->{VIN} eq $t1} @f2resc;
    U::sendline('спасти .' . $f2resc[$i]->{IME}) if $i >= 0;
  } $_, 'nf100:AUTORESC';
}

P::trig {
  U::sendline('соск') if $auto_resc;
} '^Ќу раскор€чили вы ноги по сторонам, ', 'nf1000';

sub set_mode_resc_on {
  $auto_resc = 1;
  U::sendline('соск;отпу;гг рескаю немощных');
}

sub set_mode_resc_off {
  $auto_resc = 0;
  U::sendline('гг не рескаю.');
}

P::alias {
  set_mode_resc_on();
} 'рескай';

P::alias {
  set_mode_resc_off();
} 'нерескай';

1;
